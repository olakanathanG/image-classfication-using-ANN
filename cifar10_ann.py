# -*- coding: utf-8 -*-
"""cifar10-ANN

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cp5-h3S0gW_wG8AJzJWTySyS3Lq3Y6XF
"""

import pandas as pd
import tensorflow as tf
from tensorflow import keras
import numpy as np
import matplotlib.pyplot as plt

(x_train,y_train),(x_test,y_test)=tf.keras.datasets.cifar10.load_data()

def plot_sample(index):
    plt.figure(figsize = (10,1))
    plt.imshow(x_train[index])

plot_sample(3)

plot_sample(55)

plot_sample(1100)

plot_sample(999)

x_train_split=x_train/255
x_test_split=x_test/255

y_train_categorical = keras.utils.to_categorical(
    y_train, num_classes=10)
y_test_categorical = keras.utils.to_categorical(
    y_test, num_classes=10)

model = keras.Sequential([
        keras.layers.Flatten(input_shape=(32,32,3)),
        keras.layers.Dense(3000, activation='relu'),
        keras.layers.Dense(1000, activation='relu'),
        keras.layers.Dense(10, activation='sigmoid')
    ])

model.compile(optimizer='SGD',
              loss='categorical_crossentropy',
              metrics=['accuracy'])

model.fit(x_train_split, y_train_categorical, epochs=20)

model.evaluate(x_test_split,y_test_categorical)

#plot result
y_predicted = model.predict(x_test_split)

